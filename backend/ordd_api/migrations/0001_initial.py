# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-07-05 10:11
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import ordd_api.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso2', models.CharField(max_length=2, unique=True)),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_reviewed', models.BooleanField(default=False)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('modify_time', models.DateTimeField(auto_now=True)),
                ('notes', models.CharField(blank=True, max_length=4096)),
                ('is_digital_form', models.BooleanField()),
                ('is_pub_available', models.BooleanField()),
                ('is_avail_for_free', models.BooleanField()),
                ('is_machine_read', models.BooleanField()),
                ('is_bulk_avail', models.BooleanField()),
                ('is_open_licence', models.BooleanField()),
                ('is_prov_timely', models.BooleanField()),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ordd_api.Country')),
            ],
        ),
        migrations.CreateModel(
            name='KeyDataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField()),
                ('format', models.CharField(max_length=32)),
                ('comment', models.CharField(max_length=1024)),
                ('weight', models.IntegerField()),
                ('applicability', models.ManyToManyField(to='ordd_api.Peril')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ordd_api.Category')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ordd_api.LevDataset')),
                ('description', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ordd_api.LevDescription')),
                ('scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ordd_api.LevScale')),
            ],
        ),
        migrations.CreateModel(
            name='KeyDatasetName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='KeyDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='KeyScale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='OptIn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(default=ordd_api.models.my_random_key, max_length=16)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='KeyPeril',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=256)),
                ('institution', models.CharField(blank=True, max_length=256)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Url',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, max_length=4096)),
            ],
        ),
        migrations.AddField(
            model_name='dataset',
            name='keydataset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_dataset', to='ordd_api.KeyDataset'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datasets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dataset',
            name='url',
            field=models.ManyToManyField(blank=True, to='ordd_api.Url'),
        ),
        migrations.AddField(
            model_name='country',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ordd_api.Region'),
        ),
        migrations.AlterUniqueTogether(
            name='keydataset',
            unique_together=set([('category', 'dataset', 'description', 'scale'), ('category', 'code')]),
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64)),
            ],
        ),
        migrations.AddField(
            model_name='dataset',
            name='elements',
            field=models.ManyToManyField(blank=True, to='ordd_api.Element'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='is_avail_online',
            field=models.BooleanField(default=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='dataset',
            name='is_avail_online_meta',
            field=models.BooleanField(default=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='dataset',
            name='is_existing',
            field=models.BooleanField(default=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='dataset',
            name='is_existing_txt',
            field=models.CharField(blank=True, max_length=256),
        ),
        migrations.AddField(
            model_name='dataset',
            name='is_machine_read_txt',
            field=models.CharField(blank=True, max_length=256),
        ),
        migrations.AddField(
            model_name='dataset',
            name='is_open_licence_txt',
            field=models.CharField(blank=True, max_length=256),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='notes',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='is_prov_timely_last',
            field=models.CharField(blank=True, max_length=128),
        ),
        migrations.AlterField(
            model_name='keydataset',
            name='code',
            field=models.CharField(max_length=6),
        ),
        migrations.AddField(
            model_name='keydataset',
            name='resolution',
            field=models.CharField(blank=True, max_length=32),
        ),
        migrations.AlterUniqueTogether(
            name='keydataset',
            unique_together=set([('category', 'dataset', 'description', 'scale', 'format'), ('category', 'code')]),
        ),
        migrations.CreateModel(
            name='KeyCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=2, unique=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('weight', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='KeyHazardCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='KeyTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=16)),
                ('name', models.CharField(max_length=32)),
            ],
        ),
        migrations.AlterField(
            model_name='keydataset',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ordd_api.KeyCategory'),
        ),
        migrations.AddField(
            model_name='keydataset',
            name='hazard_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ordd_api.KeyHazardCategory'),
        ),
        migrations.AlterField(
            model_name='keydataset',
            name='comment',
            field=models.CharField(blank=True, max_length=1024),
        ),
        migrations.AlterField(
            model_name='keydataset',
            name='format',
            field=models.CharField(blank=True, max_length=32),
        ),
        migrations.AddField(
            model_name='keydataset',
            name='tag_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ordd_api.KeyTagGroup'),
        ),
        migrations.AlterUniqueTogether(
            name='keydataset',
            unique_together=set([('category', 'dataset', 'description', 'scale'), ('category', 'code')]),
        ),
        migrations.AlterUniqueTogether(
            name='keytag',
            unique_together=set([('group', 'name')]),
        ),
        migrations.CreateModel(
            name='KeyTagGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, unique=True)),
            ],
        ),
        migrations.AlterField(
            model_name='keytag',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ordd_api.KeyTagGroup'),
        ),
    ]
