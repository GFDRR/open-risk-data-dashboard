# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-08-11 11:50
from __future__ import unicode_literals

from django.db import migrations
import csv

cou_mapping = {'ZR': 'CD',
               'YF': 'RS',
               'TP': 'TL',
               'RY': 'YE'}


def forwards_func(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    Country = apps.get_model("ordd_api", "Country")
    Region = apps.get_model("ordd_api", "Region")

    db_alias = schema_editor.connection.alias

    world_region = Region.objects.using(db_alias).create(name='World')
    world_region.save()

    with open('contents/countries/wb_country_list_2018.csv', 'r') as cou_f:
        cou_csv = csv.reader(cou_f, delimiter=',')
        next(cou_csv, None)
        for row in cou_csv:
            code_new = row[0]
            name_new = row[1]
            if code_new == '':
                continue

            try:
                code_old = cou_mapping[code_new]
            except KeyError:
                code_old = code_new

            try:
                country = Country.objects.using(db_alias).get(iso2=code_old)
                country.iso2 = code_new
                country.name = name_new
            except Country.DoesNotExist:
                country = Country.objects.using(db_alias).create(
                    iso2=code_new, name=name_new, region=world_region)
            country.save()


def backwards_func(apps, schema_editor):
    Country = apps.get_model("ordd_api", "Country")
    Region = apps.get_model("ordd_api", "Region")

    db_alias = schema_editor.connection.alias

    newer = Country.objects.using(db_alias).filter(region__name='World')
    newer.delete()

    for cou_new, cou_old in cou_mapping.items():
        country = Country.objects.using(db_alias).get(iso2=cou_new)
        country.iso2 = cou_old
        country.save()

    world_region = Region.objects.using(db_alias).get(name='World')
    world_region.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('ordd_api', '0019_auto_20180913_1221'),
    ]

    operations = [
        migrations.RunPython(forwards_func, backwards_func),
    ]
